@using PagedList.Mvc
@using TM.Domain.ViewModels

@model SlotFuncAuthRecordIndexView

<link href="~/ThirdParties/air-datepicker-master/dist/css/datepicker.min.css" rel="stylesheet" />

@{
    ViewBag.Title = "Slot功能權限紀錄";
}

<style>
    .highlighttrx{
        background-color: orangered;
        color: white;
    }
</style>

<div class="row">
    <h2>
        @ViewBag.Title
    </h2>
</div>

<div class="well">
    @using (Html.BeginForm("IndexPost", "SlotFuncAuthRecord", FormMethod.Post, new { @class = "form-horizontal", role = "form", id = "SearchModel" }))
    {
        @Html.AntiForgeryToken()

        <div class="row">
            <div class="col-md-6 form-group">
                @Html.LabelFor(model => model.SearchEmployeeId, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.SearchEmployeeId, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-6 form-group">
                @Html.LabelFor(model => model.SearchEmployeeName, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.SearchEmployeeName, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-6 form-group">
                @Html.LabelFor(model => model.SearchIsCompleted, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                   @Html.DropDownForBoolType(model => model.SearchIsCompleted)
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" class="btn btn-primary" value="查詢">
            </div>
        </div>
    }
</div>

<div class="row">
@using (Html.BeginForm("CreatePost", "SlotFuncAuthRecord", FormMethod.Post))
{
    <table id="mainTable" class="table">
        <tr>
            <th width="140px">
                @Html.DisplayNameFor(model => model.SlotFuncAuthRecords.FirstOrDefault().AuthModifyDate)
            </th>
            <th width="140px">
                @Html.DisplayNameFor(model => model.SlotFuncAuthRecords.FirstOrDefault().EmployeeId)
            </th>
            <th width="140px">
                @Html.DisplayNameFor(model => model.SlotFuncAuthRecords.FirstOrDefault().EmployeeName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SlotFuncAuthRecords.FirstOrDefault().Item)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SlotFuncAuthRecords.FirstOrDefault().Content)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SlotFuncAuthRecords.FirstOrDefault().IsCompleted)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SlotFuncAuthRecords.FirstOrDefault().Comment)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SlotFuncAuthRecords.FirstOrDefault().Creator)
            </th>
            <th>
            </th>
        </tr>
        <tr>
                <td>
                    <input name="AddSlotFuncAuthRecord.AuthModifyDate" type='text' class='form-control datepicker-here' data-language='zh' />
                    @Html.ValidationMessageFor(model => model.AddSlotFuncAuthRecord.AuthModifyDate, "", new { @class = "text-danger" })
                </td>
                <td>
                    @Html.EditorFor(model => model.AddSlotFuncAuthRecord.EmployeeId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AddSlotFuncAuthRecord.EmployeeId, "", new { @class = "text-danger" })
                </td>
                <td>
                    @Html.EditorFor(model => model.AddSlotFuncAuthRecord.EmployeeName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AddSlotFuncAuthRecord.EmployeeName, "", new { @class = "text-danger" })
                </td>
                <td>
                    @Html.DropDownForSLotAuthItem(model => model.AddSlotFuncAuthRecord.Item)
                    @Html.ValidationMessageFor(model => model.AddSlotFuncAuthRecord.Item, "", new { @class = "text-danger" })
                </td>
                <td>
                    <textarea name="AddSlotFuncAuthRecord.Content" class="form-control" rows="5"></textarea>
                    @Html.ValidationMessageFor(model => model.AddSlotFuncAuthRecord.Content, "", new { @class = "text-danger" })
                </td>
                <td>
                    @Html.DropDownForBoolType(model => model.AddSlotFuncAuthRecord.IsCompleted)
                    @Html.ValidationMessageFor(model => model.AddSlotFuncAuthRecord.IsCompleted, "", new { @class = "text-danger" })
                </td>
                <td>
                    <textarea name="AddSlotFuncAuthRecord.Comment" class="form-control" rows="5"></textarea>
                    @Html.ValidationMessageFor(model => model.AddSlotFuncAuthRecord.Comment, "", new { @class = "text-danger" })
                </td>
            <td></td>
                <td>
                    @if (Auth.IsShow("SlotFuncAuthRecord/CreatePost"))
                    {
                        <button type="submit" class="btn btn-primary btn-xs">新增</button>
                    }
                </td>
           
        </tr>

        @foreach (var item in Model.SlotFuncAuthRecords)
        {
            <tr class="@(item.IsCompleted == "N" ? "highlighttrx" : "")">
                <td>
                    @string.Format("{0:yyyy/MM/dd}", item.AuthModifyDate)
                </td>
                <td>
                    @item.EmployeeId
                </td>
                <td>
                    @item.EmployeeName
                </td>
                <td>
                    @Html.DisplayFor(model => item.Item)
                </td>
                <td>
                    <pre> @item.Content</pre>
                </td>
                <td>
                    @(item.IsCompleted == "Y" ? "是" : item.IsCompleted == "N" ? "否" : "")
                </td>
                <td>
                    <pre> @item.Comment</pre>
                </td>
                <td>
                    @item.Creator
                </td>
                <td>
                    @if (Auth.IsShow("SlotFuncAuthRecord/Edit"))
                    {
                        <button type="button" class="EditBtn btn btn-warning btn-xs" data-id="@item.RecordId">修改</button>
                    }
                    @if (Auth.IsShow("SlotFuncAuthRecord/Delete"))
                    {
                        <button type="button" class="DeleteBtn btn btn-danger btn-xs" data-id="@item.RecordId">刪除</button>
                    }
                </td>
            </tr>
        }
    </table>
}
</div>
@Html.PagedListPager(Model.SlotFuncAuthRecords, page => Url.Action("Index", new { page }))


@section scripts{
    <script src="~/ThirdParties/air-datepicker-master/dist/js/datepicker.min.js"></script>
    <script src="~/ThirdParties/air-datepicker-master/dist/js/i18n/datepicker.zh.js"></script>

    <script>
        $(document).ready(function () {

            //編輯
            $(".EditBtn").click(function () {
                var editUrl = '@Url.Action("Edit", "SlotFuncAuthRecord")';
                var id = $(this).data("id");
                var thisrow = $(this).parent().parent();

                $.ajax({
                    type: "GET",
                    url: editUrl,
                    contentType: "application/json; charset=utf-8",
                    data: { "id": id },
                    datatype: "json",
                    success: function (data) {
                        $(data).insertAfter(thisrow);
                        thisrow.hide();
                        //$('#mainTable').append(data);
                    },
                    error: function () {
                        alert("Dynamic content load failed.");
                    }
                });
            });

            //刪除
            $(".DeleteBtn").click(function () {
                event.preventDefault();
                var deleteUrl = '@Url.Action("Delete", "SlotFuncAuthRecord")';
                var id = $(this).data("id");

                $.confirm({
                    title: '注意',
                    content: '確定刪除該筆資料?',
                    buttons: {
                        confirm: function () {
                            location.href = deleteUrl + "?id=" + id;
                        },
                        cancel: function () {
                        },
                    }
                });
            });

            $('.pagination>li>a[href]').each(function (i, item) {
                var page = $(item).attr('href').replace('/SlotFuncAuthRecord?page=', '');
                $(item).attr('href', '#').click(function () { postPage(page); });
            });

        });

        function postPage(page) {
            var targetFormId = '#SearchModel';
            if ($(targetFormId).size() > 0) {
                $('<input>')
                    .attr({ type: 'hidden', id: 'CurrentPage', name: 'CurrentPage', value: page })
                    .appendTo($(targetFormId));
                $(targetFormId).submit();
            }
        };

        
    </script>
}

